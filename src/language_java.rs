// Code generated; DO NOT EDIT.

#[derive(Clone, Debug, PartialEq)]
pub enum Java {
    END = 0,
    SEMI = 1,
    DecimalIntegerLiteral = 2,
    HexIntegerLiteral = 3,
    OctalIntegerLiteral = 4,
    BinaryIntegerLiteral = 5,
    LongIntegerLiteral = 6,
    DecimalFloatingPointLiteral = 7,
    HexFloatingPointLiteral = 8,
    True = 9,
    False = 10,
    SQUOTE = 11,
    SLASHLBRACKCARETBSLASHSQUOTEBSLASHnRBRACKSLASH = 12,
    SLASHBSLASHBSLASHDOTSLASH = 13,
    SLASHBSLASHBSLASHBSLASHnSLASH = 14,
    StringLiteral = 15,
    NullLiteral = 16,
    NUL = 17,
    SOH = 18,
    STX = 19,
    ETX = 20,
    EOT = 21,
    ENQ = 22,
    ACK = 23,
    BEL = 24,
    BS = 25,
    TAB = 26,
    LF = 27,
    VT = 28,
    FF = 29,
    CR = 30,
    SO = 31,
    SI = 32,
    DLE = 33,
    DC1 = 34,
    DC2 = 35,
    DC3 = 36,
    DC4 = 37,
    NAK = 38,
    SYN = 39,
    ETB = 40,
    CAN = 41,
    EM = 42,
    SUB = 43,
    ESC = 44,
    FS = 45,
    GS = 46,
    RS = 47,
    US = 48,
    Space = 49,
    HorizontalTab = 50,
    SLASHBSLASHBSLASHSLASH = 51,
    U = 52,
    SLASHLBRACKADASHFaDASHf0DASH9RBRACKPLUSSLASH = 53,
    B = 54,
    T = 55,
    N = 56,
    F = 57,
    R = 58,
    DQUOTE = 59,
    BSLASH = 60,
    SLASHLBRACK0DASH7RBRACKPLUSSLASH = 61,
    SLASHLBRACK0DASH3RBRACKSLASH = 62,
    LPAREN = 63,
    RPAREN = 64,
    AMP = 65,
    EQ = 66,
    PLUSEQ = 67,
    DASHEQ = 68,
    STAREQ = 69,
    SLASHEQ = 70,
    AMPEQ = 71,
    PIPEEQ = 72,
    CARETEQ = 73,
    PERCENTEQ = 74,
    LTLTEQ = 75,
    GTGTEQ = 76,
    GTGTGTEQ = 77,
    GT = 78,
    LT = 79,
    EQEQ = 80,
    GTEQ = 81,
    LTEQ = 82,
    BANGEQ = 83,
    AMPAMP = 84,
    PIPEPIPE = 85,
    PLUS = 86,
    DASH = 87,
    STAR = 88,
    SLASH = 89,
    PIPE = 90,
    CARET = 91,
    PERCENT = 92,
    LTLT = 93,
    GTGT = 94,
    GTGTGT = 95,
    Instanceof = 96,
    DASHGT = 97,
    COMMA = 98,
    QMARK = 99,
    COLON = 100,
    BANG = 101,
    TILDE = 102,
    PLUSPLUS = 103,
    DASHDASH = 104,
    Assert = 105,
    Switch = 106,
    LBRACE = 107,
    RBRACE = 108,
    Case = 109,
    Default = 110,
    Do = 111,
    While = 112,
    Break = 113,
    Continue = 114,
    Return = 115,
    Synchronized = 116,
    Throw = 117,
    Try = 118,
    Catch = 119,
    Finally = 120,
    If = 121,
    Else = 122,
    For = 123,
    LTGT = 124,
    Extends = 125,
    LBRACK = 126,
    RBRACK = 127,
    Byte = 128,
    Short = 129,
    Int = 130,
    Long = 131,
    Char = 132,
    Float = 133,
    Double = 134,
    BooleanType = 135,
    VoidType = 136,
    AT = 137,
    Open = 138,
    Module = 139,
    Requires = 140,
    Exports = 141,
    To = 142,
    Opens = 143,
    Uses = 144,
    Provides = 145,
    With = 146,
    Transitive = 147,
    Static = 148,
    DOT = 149,
    Package = 150,
    Import = 151,
    Enum = 152,
    Class = 153,
    Public = 154,
    Protected = 155,
    Private = 156,
    Abstract = 157,
    Final = 158,
    Strictfp = 159,
    Native = 160,
    Transient = 161,
    Volatile = 162,
    Implements = 163,
    New = 164,
    COLONCOLON = 165,
    ATinterface = 166,
    Interface = 167,
    DOTDOTDOT = 168,
    This = 169,
    Super = 170,
    Throws = 171,
    Identifier = 172,
    Comment = 173,
    Program = 174,
    Statement = 175,
    MethodStatement = 176,
    ExpressionStatement = 177,
    Semicolon = 178,
    Literal = 179,
    IntegerLiteral = 180,
    FloatingPointLiteral = 181,
    BooleanLiteral = 182,
    CharacterLiteral = 183,
    Expression = 184,
    CastExpression = 185,
    AdditionalBound = 186,
    AssignmentExpression = 187,
    Lhs = 188,
    BinaryExpression = 189,
    LambdaExpression = 190,
    LambdaParameters = 191,
    InferredParameters = 192,
    LambdaBody = 193,
    TernaryExpression = 194,
    UnaryExpression = 195,
    UpdateExpression = 196,
    LabeledStatement = 197,
    AssertStatement = 198,
    SwitchStatement = 199,
    SwitchBlock = 200,
    SwitchLabel = 201,
    DoStatement = 202,
    BreakStatement = 203,
    ContinueStatement = 204,
    ReturnStatement = 205,
    SynchronizedStatement = 206,
    ThrowStatement = 207,
    TryStatement = 208,
    Catches = 209,
    CatchClause = 210,
    CatchFormalParameter = 211,
    CatchType = 212,
    Finally2 = 213,
    TryWithResourcesStatement = 214,
    ResourceSpecification = 215,
    Resource = 216,
    VariableAccess = 217,
    IfThenElseStatement = 218,
    WhileStatement = 219,
    ForStatement = 220,
    BasicForStatement = 221,
    ForInit = 222,
    EnhancedForStatement = 223,
    TypeArgumentsOrDiamond = 224,
    TypeArguments = 225,
    TypeArgument = 226,
    Wildcard = 227,
    WildcardBounds = 228,
    Dims = 229,
    IntegralType = 230,
    FloatingPointType = 231,
    Annotation = 232,
    NormalAnnotation = 233,
    MarkerAnnotation = 234,
    SingleElementAnnotation = 235,
    ElementValuePairList = 236,
    ElementValuePair = 237,
    ElementValue = 238,
    ElementValueArrayInitializer = 239,
    Declaration = 240,
    ModuleDeclaration = 241,
    ModuleDirective = 242,
    RequiresModifier = 243,
    ModuleName = 244,
    PackageDeclaration = 245,
    ImportDeclaration = 246,
    Asterisk = 247,
    EnumDeclaration = 248,
    EnumBodyDeclarations = 249,
    EnumConstant = 250,
    ClassDeclaration = 251,
    Modifier = 252,
    TypeParameters = 253,
    TypeParameter = 254,
    TypeBound = 255,
    Superclass = 256,
    SuperInterfaces = 257,
    InterfaceTypeList = 258,
    ClassBody = 259,
    StaticInitializer = 260,
    ConstructorDeclaration = 261,
    ConstructorDeclarator = 262,
    ConstructorBody = 263,
    ExplicitConstructorInvocation = 264,
    ScopedIdentifier = 265,
    FieldDeclaration = 266,
    Primary = 267,
    ArrayCreationExpression = 268,
    DimsExprs = 269,
    DimsExpr = 270,
    PrimaryNoNewArray = 271,
    ClassLiteral = 272,
    ClassInstanceCreationExpression = 273,
    UnqualifiedClassInstanceCreationExpression = 274,
    FieldAccess = 275,
    ArrayAccess = 276,
    MethodInvocation = 277,
    ArgumentList = 278,
    MethodReference = 279,
    InterfaceDeclaration = 280,
    AnnotationTypeDeclaration = 281,
    AnnotationTypeBody = 282,
    AnnotationTypeMemberDeclaration = 283,
    AnnotationTypeElementDeclaration = 284,
    DefaultValue = 285,
    NormalInterfaceDeclaration = 286,
    ExtendsInterfaces = 287,
    InterfaceBody = 288,
    InterfaceMemberDeclaration = 289,
    ConstantDeclaration = 290,
    VariableDeclaratorList = 291,
    VariableDeclarator = 292,
    VariableDeclaratorId = 293,
    ArrayInitializer = 294,
    Type = 295,
    UnannType = 296,
    AnnotatedType = 297,
    ScopedTypeIdentifier = 298,
    GenericType = 299,
    ArrayType = 300,
    MethodHeader = 301,
    MethodDeclarator = 302,
    FormalParameter = 303,
    ReceiverParameter = 304,
    SpreadParameter = 305,
    Throws2 = 306,
    ExceptionTypeList = 307,
    ExceptionType = 308,
    MethodBody = 309,
    Block = 310,
    LocalVariableDeclarationStatement = 311,
    LocalVariableDeclaration = 312,
    MethodDeclaration = 313,
    ReservedIdentifier = 314,
    ProgramRepeat1 = 315,
    CharacterLiteralRepeat1 = 316,
    CastExpressionRepeat1 = 317,
    InferredParametersRepeat1 = 318,
    SwitchBlockRepeat1 = 319,
    CatchesRepeat1 = 320,
    CatchFormalParameterRepeat1 = 321,
    CatchTypeRepeat1 = 322,
    ResourceSpecificationRepeat1 = 323,
    BasicForStatementRepeat1 = 324,
    TypeArgumentsRepeat1 = 325,
    WildcardRepeat1 = 326,
    DimsRepeat1 = 327,
    ElementValuePairListRepeat1 = 328,
    ElementValueArrayInitializerRepeat1 = 329,
    ModuleDeclarationRepeat1 = 330,
    ModuleDirectiveRepeat1 = 331,
    ModuleDirectiveRepeat2 = 332,
    ModuleDirectiveRepeat3 = 333,
    ImportDeclarationRepeat1 = 334,
    EnumDeclarationRepeat1 = 335,
    EnumBodyDeclarationsRepeat1 = 336,
    TypeParametersRepeat1 = 337,
    TypeBoundRepeat1 = 338,
    InterfaceTypeListRepeat1 = 339,
    ConstructorBodyRepeat1 = 340,
    DimsExprsRepeat1 = 341,
    ClassLiteralRepeat1 = 342,
    AnnotationTypeBodyRepeat1 = 343,
    InterfaceBodyRepeat1 = 344,
    VariableDeclaratorListRepeat1 = 345,
    ArrayInitializerRepeat1 = 346,
    FormalParametersRepeat1 = 347,
    ExceptionTypeListRepeat1 = 348,
    Identifier2 = 349,
    TypeIdentifier = 350,
    Error = 351,
}

impl Into<&'static str> for Java {
    fn into(self) -> &'static str {
        match self {
            Java::END => "END",
            Java::SEMI => ";",
            Java::DecimalIntegerLiteral => "decimal_integer_literal",
            Java::HexIntegerLiteral => "hex_integer_literal",
            Java::OctalIntegerLiteral => "octal_integer_literal",
            Java::BinaryIntegerLiteral => "binary_integer_literal",
            Java::LongIntegerLiteral => "long_integer_literal",
            Java::DecimalFloatingPointLiteral => "decimal_floating_point_literal",
            Java::HexFloatingPointLiteral => "hex_floating_point_literal",
            Java::True => "true",
            Java::False => "false",
            Java::SQUOTE => "'",
            Java::SLASHLBRACKCARETBSLASHSQUOTEBSLASHnRBRACKSLASH => "/[^\\'\\n]/",
            Java::SLASHBSLASHBSLASHDOTSLASH => "/\\\\./",
            Java::SLASHBSLASHBSLASHBSLASHnSLASH => "/\\\\\\n/",
            Java::StringLiteral => "string_literal",
            Java::NullLiteral => "null_literal",
            Java::NUL => "NUL",
            Java::SOH => "SOH",
            Java::STX => "STX",
            Java::ETX => "ETX",
            Java::EOT => "EOT",
            Java::ENQ => "ENQ",
            Java::ACK => "ACK",
            Java::BEL => "BEL",
            Java::BS => "BS",
            Java::TAB => "TAB",
            Java::LF => "LF",
            Java::VT => "VT",
            Java::FF => "FF",
            Java::CR => "CR",
            Java::SO => "SO",
            Java::SI => "SI",
            Java::DLE => "DLE",
            Java::DC1 => "DC1",
            Java::DC2 => "DC2",
            Java::DC3 => "DC3",
            Java::DC4 => "DC4",
            Java::NAK => "NAK",
            Java::SYN => "SYN",
            Java::ETB => "ETB",
            Java::CAN => "CAN",
            Java::EM => "EM",
            Java::SUB => "SUB",
            Java::ESC => "ESC",
            Java::FS => "FS",
            Java::GS => "GS",
            Java::RS => "RS",
            Java::US => "US",
            Java::Space => "space",
            Java::HorizontalTab => "horizontal_tab",
            Java::SLASHBSLASHBSLASHSLASH => "/\\\\/",
            Java::U => "u",
            Java::SLASHLBRACKADASHFaDASHf0DASH9RBRACKPLUSSLASH => "/[A-Fa-f0-9]+/",
            Java::B => "b",
            Java::T => "t",
            Java::N => "n",
            Java::F => "f",
            Java::R => "r",
            Java::DQUOTE => "\"",
            Java::BSLASH => "\\",
            Java::SLASHLBRACK0DASH7RBRACKPLUSSLASH => "/[0-7]+/",
            Java::SLASHLBRACK0DASH3RBRACKSLASH => "/[0-3]/",
            Java::LPAREN => "(",
            Java::RPAREN => ")",
            Java::AMP => "&",
            Java::EQ => "=",
            Java::PLUSEQ => "+=",
            Java::DASHEQ => "-=",
            Java::STAREQ => "*=",
            Java::SLASHEQ => "/=",
            Java::AMPEQ => "&=",
            Java::PIPEEQ => "|=",
            Java::CARETEQ => "^=",
            Java::PERCENTEQ => "%=",
            Java::LTLTEQ => "<<=",
            Java::GTGTEQ => ">>=",
            Java::GTGTGTEQ => ">>>=",
            Java::GT => ">",
            Java::LT => "<",
            Java::EQEQ => "==",
            Java::GTEQ => ">=",
            Java::LTEQ => "<=",
            Java::BANGEQ => "!=",
            Java::AMPAMP => "&&",
            Java::PIPEPIPE => "||",
            Java::PLUS => "+",
            Java::DASH => "-",
            Java::STAR => "*",
            Java::SLASH => "/",
            Java::PIPE => "|",
            Java::CARET => "^",
            Java::PERCENT => "%",
            Java::LTLT => "<<",
            Java::GTGT => ">>",
            Java::GTGTGT => ">>>",
            Java::Instanceof => "instanceof",
            Java::DASHGT => "->",
            Java::COMMA => ",",
            Java::QMARK => "?",
            Java::COLON => ":",
            Java::BANG => "!",
            Java::TILDE => "~",
            Java::PLUSPLUS => "++",
            Java::DASHDASH => "--",
            Java::Assert => "assert",
            Java::Switch => "switch",
            Java::LBRACE => "{",
            Java::RBRACE => "}",
            Java::Case => "case",
            Java::Default => "default",
            Java::Do => "do",
            Java::While => "while",
            Java::Break => "break",
            Java::Continue => "continue",
            Java::Return => "return",
            Java::Synchronized => "synchronized",
            Java::Throw => "throw",
            Java::Try => "try",
            Java::Catch => "catch",
            Java::Finally => "finally",
            Java::If => "if",
            Java::Else => "else",
            Java::For => "for",
            Java::LTGT => "<>",
            Java::Extends => "extends",
            Java::LBRACK => "[",
            Java::RBRACK => "]",
            Java::Byte => "byte",
            Java::Short => "short",
            Java::Int => "int",
            Java::Long => "long",
            Java::Char => "char",
            Java::Float => "float",
            Java::Double => "double",
            Java::BooleanType => "boolean_type",
            Java::VoidType => "void_type",
            Java::AT => "@",
            Java::Open => "open",
            Java::Module => "module",
            Java::Requires => "requires",
            Java::Exports => "exports",
            Java::To => "to",
            Java::Opens => "opens",
            Java::Uses => "uses",
            Java::Provides => "provides",
            Java::With => "with",
            Java::Transitive => "transitive",
            Java::Static => "static",
            Java::DOT => ".",
            Java::Package => "package",
            Java::Import => "import",
            Java::Enum => "enum",
            Java::Class => "class",
            Java::Public => "public",
            Java::Protected => "protected",
            Java::Private => "private",
            Java::Abstract => "abstract",
            Java::Final => "final",
            Java::Strictfp => "strictfp",
            Java::Native => "native",
            Java::Transient => "transient",
            Java::Volatile => "volatile",
            Java::Implements => "implements",
            Java::New => "new",
            Java::COLONCOLON => "::",
            Java::ATinterface => "@interface",
            Java::Interface => "interface",
            Java::DOTDOTDOT => "...",
            Java::This => "this",
            Java::Super => "super",
            Java::Throws => "throws",
            Java::Identifier => "identifier",
            Java::Comment => "comment",
            Java::Program => "program",
            Java::Statement => "_statement",
            Java::MethodStatement => "_method_statement",
            Java::ExpressionStatement => "_expression_statement",
            Java::Semicolon => "_semicolon",
            Java::Literal => "_literal",
            Java::IntegerLiteral => "integer_literal",
            Java::FloatingPointLiteral => "floating_point_literal",
            Java::BooleanLiteral => "boolean_literal",
            Java::CharacterLiteral => "character_literal",
            Java::Expression => "_expression",
            Java::CastExpression => "cast_expression",
            Java::AdditionalBound => "additional_bound",
            Java::AssignmentExpression => "assignment_expression",
            Java::Lhs => "lhs",
            Java::BinaryExpression => "binary_expression",
            Java::LambdaExpression => "lambda_expression",
            Java::LambdaParameters => "_lambda_parameters",
            Java::InferredParameters => "inferred_parameters",
            Java::LambdaBody => "lambda_body",
            Java::TernaryExpression => "ternary_expression",
            Java::UnaryExpression => "unary_expression",
            Java::UpdateExpression => "update_expression",
            Java::LabeledStatement => "labeled_statement",
            Java::AssertStatement => "assert_statement",
            Java::SwitchStatement => "switch_statement",
            Java::SwitchBlock => "switch_block",
            Java::SwitchLabel => "switch_label",
            Java::DoStatement => "do_statement",
            Java::BreakStatement => "break_statement",
            Java::ContinueStatement => "continue_statement",
            Java::ReturnStatement => "return_statement",
            Java::SynchronizedStatement => "synchronized_statement",
            Java::ThrowStatement => "throw_statement",
            Java::TryStatement => "try_statement",
            Java::Catches => "catches",
            Java::CatchClause => "catch_clause",
            Java::CatchFormalParameter => "catch_formal_parameter",
            Java::CatchType => "catch_type",
            Java::Finally2 => "finally",
            Java::TryWithResourcesStatement => "try_with_resources_statement",
            Java::ResourceSpecification => "resource_specification",
            Java::Resource => "resource",
            Java::VariableAccess => "variable_access",
            Java::IfThenElseStatement => "if_then_else_statement",
            Java::WhileStatement => "while_statement",
            Java::ForStatement => "for_statement",
            Java::BasicForStatement => "basic_for_statement",
            Java::ForInit => "for_init",
            Java::EnhancedForStatement => "enhanced_for_statement",
            Java::TypeArgumentsOrDiamond => "_type_arguments_or_diamond",
            Java::TypeArguments => "_type_arguments",
            Java::TypeArgument => "type_argument",
            Java::Wildcard => "wildcard",
            Java::WildcardBounds => "_wildcard_bounds",
            Java::Dims => "dims",
            Java::IntegralType => "integral_type",
            Java::FloatingPointType => "floating_point_type",
            Java::Annotation => "_annotation",
            Java::NormalAnnotation => "normal_annotation",
            Java::MarkerAnnotation => "marker_annotation",
            Java::SingleElementAnnotation => "single_element_annotation",
            Java::ElementValuePairList => "element_value_pair_list",
            Java::ElementValuePair => "element_value_pair",
            Java::ElementValue => "element_value",
            Java::ElementValueArrayInitializer => "element_value_array_initializer",
            Java::Declaration => "_declaration",
            Java::ModuleDeclaration => "module_declaration",
            Java::ModuleDirective => "module_directive",
            Java::RequiresModifier => "requires_modifier",
            Java::ModuleName => "module_name",
            Java::PackageDeclaration => "package_declaration",
            Java::ImportDeclaration => "import_declaration",
            Java::Asterisk => "asterisk",
            Java::EnumDeclaration => "enum_declaration",
            Java::EnumBodyDeclarations => "enum_body_declarations",
            Java::EnumConstant => "enum_constant",
            Java::ClassDeclaration => "class_declaration",
            Java::Modifier => "modifier",
            Java::TypeParameters => "type_parameters",
            Java::TypeParameter => "type_parameter",
            Java::TypeBound => "type_bound",
            Java::Superclass => "superclass",
            Java::SuperInterfaces => "super_interfaces",
            Java::InterfaceTypeList => "interface_type_list",
            Java::ClassBody => "class_body",
            Java::StaticInitializer => "static_initializer",
            Java::ConstructorDeclaration => "constructor_declaration",
            Java::ConstructorDeclarator => "constructor_declarator",
            Java::ConstructorBody => "constructor_body",
            Java::ExplicitConstructorInvocation => "explicit_constructor_invocation",
            Java::ScopedIdentifier => "scoped_identifier",
            Java::FieldDeclaration => "field_declaration",
            Java::Primary => "_primary",
            Java::ArrayCreationExpression => "array_creation_expression",
            Java::DimsExprs => "_dims_exprs",
            Java::DimsExpr => "dims_expr",
            Java::PrimaryNoNewArray => "_primary_no_new_array",
            Java::ClassLiteral => "class_literal",
            Java::ClassInstanceCreationExpression => "class_instance_creation_expression",
            Java::UnqualifiedClassInstanceCreationExpression => {
                "unqualified_class_instance_creation_expression"
            }
            Java::FieldAccess => "field_access",
            Java::ArrayAccess => "array_access",
            Java::MethodInvocation => "method_invocation",
            Java::ArgumentList => "argument_list",
            Java::MethodReference => "method_reference",
            Java::InterfaceDeclaration => "interface_declaration",
            Java::AnnotationTypeDeclaration => "annotation_type_declaration",
            Java::AnnotationTypeBody => "annotation_type_body",
            Java::AnnotationTypeMemberDeclaration => "annotation_type_member_declaration",
            Java::AnnotationTypeElementDeclaration => "annotation_type_element_declaration",
            Java::DefaultValue => "default_value",
            Java::NormalInterfaceDeclaration => "normal_interface_declaration",
            Java::ExtendsInterfaces => "extends_interfaces",
            Java::InterfaceBody => "interface_body",
            Java::InterfaceMemberDeclaration => "interface_member_declaration",
            Java::ConstantDeclaration => "constant_declaration",
            Java::VariableDeclaratorList => "variable_declarator_list",
            Java::VariableDeclarator => "variable_declarator",
            Java::VariableDeclaratorId => "variable_declarator_id",
            Java::ArrayInitializer => "array_initializer",
            Java::Type => "_type",
            Java::UnannType => "_unann_type",
            Java::AnnotatedType => "annotated_type",
            Java::ScopedTypeIdentifier => "scoped_type_identifier",
            Java::GenericType => "generic_type",
            Java::ArrayType => "array_type",
            Java::MethodHeader => "method_header",
            Java::MethodDeclarator => "method_declarator",
            Java::FormalParameter => "formal_parameter",
            Java::ReceiverParameter => "receiver_parameter",
            Java::SpreadParameter => "spread_parameter",
            Java::Throws2 => "throws",
            Java::ExceptionTypeList => "exception_type_list",
            Java::ExceptionType => "exception_type",
            Java::MethodBody => "method_body",
            Java::Block => "block",
            Java::LocalVariableDeclarationStatement => "local_variable_declaration_statement",
            Java::LocalVariableDeclaration => "local_variable_declaration",
            Java::MethodDeclaration => "method_declaration",
            Java::ReservedIdentifier => "_reserved_identifier",
            Java::ProgramRepeat1 => "program_repeat1",
            Java::CharacterLiteralRepeat1 => "character_literal_repeat1",
            Java::CastExpressionRepeat1 => "cast_expression_repeat1",
            Java::InferredParametersRepeat1 => "inferred_parameters_repeat1",
            Java::SwitchBlockRepeat1 => "switch_block_repeat1",
            Java::CatchesRepeat1 => "catches_repeat1",
            Java::CatchFormalParameterRepeat1 => "catch_formal_parameter_repeat1",
            Java::CatchTypeRepeat1 => "catch_type_repeat1",
            Java::ResourceSpecificationRepeat1 => "resource_specification_repeat1",
            Java::BasicForStatementRepeat1 => "basic_for_statement_repeat1",
            Java::TypeArgumentsRepeat1 => "_type_arguments_repeat1",
            Java::WildcardRepeat1 => "wildcard_repeat1",
            Java::DimsRepeat1 => "dims_repeat1",
            Java::ElementValuePairListRepeat1 => "element_value_pair_list_repeat1",
            Java::ElementValueArrayInitializerRepeat1 => "element_value_array_initializer_repeat1",
            Java::ModuleDeclarationRepeat1 => "module_declaration_repeat1",
            Java::ModuleDirectiveRepeat1 => "module_directive_repeat1",
            Java::ModuleDirectiveRepeat2 => "module_directive_repeat2",
            Java::ModuleDirectiveRepeat3 => "module_directive_repeat3",
            Java::ImportDeclarationRepeat1 => "import_declaration_repeat1",
            Java::EnumDeclarationRepeat1 => "enum_declaration_repeat1",
            Java::EnumBodyDeclarationsRepeat1 => "enum_body_declarations_repeat1",
            Java::TypeParametersRepeat1 => "type_parameters_repeat1",
            Java::TypeBoundRepeat1 => "type_bound_repeat1",
            Java::InterfaceTypeListRepeat1 => "interface_type_list_repeat1",
            Java::ConstructorBodyRepeat1 => "constructor_body_repeat1",
            Java::DimsExprsRepeat1 => "_dims_exprs_repeat1",
            Java::ClassLiteralRepeat1 => "class_literal_repeat1",
            Java::AnnotationTypeBodyRepeat1 => "annotation_type_body_repeat1",
            Java::InterfaceBodyRepeat1 => "interface_body_repeat1",
            Java::VariableDeclaratorListRepeat1 => "variable_declarator_list_repeat1",
            Java::ArrayInitializerRepeat1 => "array_initializer_repeat1",
            Java::FormalParametersRepeat1 => "formal_parameters_repeat1",
            Java::ExceptionTypeListRepeat1 => "exception_type_list_repeat1",
            Java::Identifier2 => "identifier",
            Java::TypeIdentifier => "type_identifier",
            Java::Error => "ERROR",
        }
    }
}

#[allow(clippy::unreadable_literal)]
static KEYS: phf::Map<&'static str, Java> = ::phf::Map {
    key: 3213172566270843353,
    disps: ::phf::Slice::Static(&[
        (0, 183),
        (1, 336),
        (0, 23),
        (0, 312),
        (1, 4),
        (0, 8),
        (2, 142),
        (0, 94),
        (0, 4),
        (1, 204),
        (1, 141),
        (0, 20),
        (0, 0),
        (0, 63),
        (0, 79),
        (0, 74),
        (0, 30),
        (1, 197),
        (0, 45),
        (0, 99),
        (0, 62),
        (0, 2),
        (1, 13),
        (0, 8),
        (0, 0),
        (6, 299),
        (0, 15),
        (0, 94),
        (0, 301),
        (0, 4),
        (0, 338),
        (0, 2),
        (0, 0),
        (0, 179),
        (0, 38),
        (0, 0),
        (3, 314),
        (0, 115),
        (0, 23),
        (1, 94),
        (0, 149),
        (0, 2),
        (0, 17),
        (0, 6),
        (1, 44),
        (1, 7),
        (0, 2),
        (0, 83),
        (0, 34),
        (0, 91),
        (0, 0),
        (2, 2),
        (4, 155),
        (10, 157),
        (1, 2),
        (0, 217),
        (0, 1),
        (0, 47),
        (1, 1),
        (4, 40),
        (1, 243),
        (0, 85),
        (0, 215),
        (83, 100),
        (0, 23),
        (0, 23),
        (3, 274),
        (13, 69),
        (0, 73),
        (76, 36),
    ]),
    entries: ::phf::Slice::Static(&[
        ("class_declaration", Java::ClassDeclaration),
        ("exception_type_list", Java::ExceptionTypeList),
        ("@", Java::AT),
        ("asterisk", Java::Asterisk),
        (
            "catch_formal_parameter_repeat1",
            Java::CatchFormalParameterRepeat1,
        ),
        ("_semicolon", Java::Semicolon),
        (".", Java::DOT),
        (
            "variable_declarator_list_repeat1",
            Java::VariableDeclaratorListRepeat1,
        ),
        ("DLE", Java::DLE),
        ("_expression_statement", Java::ExpressionStatement),
        ("SYN", Java::SYN),
        ("type_identifier", Java::TypeIdentifier),
        ("variable_declarator", Java::VariableDeclarator),
        ("lambda_body", Java::LambdaBody),
        ("static", Java::Static),
        ("protected", Java::Protected),
        ("FF", Java::FF),
        ("synchronized", Java::Synchronized),
        ("assignment_expression", Java::AssignmentExpression),
        ("scoped_identifier", Java::ScopedIdentifier),
        ("new", Java::New),
        ("<>", Java::LTGT),
        ("STX", Java::STX),
        ("octal_integer_literal", Java::OctalIntegerLiteral),
        ("super", Java::Super),
        (",", Java::COMMA),
        ("LF", Java::LF),
        ("_lambda_parameters", Java::LambdaParameters),
        ("case", Java::Case),
        ("while", Java::While),
        ("CAN", Java::CAN),
        ("update_expression", Java::UpdateExpression),
        ("throws", Java::Throws),
        (
            "annotation_type_member_declaration",
            Java::AnnotationTypeMemberDeclaration,
        ),
        ("_expression", Java::Expression),
        (
            "inferred_parameters_repeat1",
            Java::InferredParametersRepeat1,
        ),
        ("long_integer_literal", Java::LongIntegerLiteral),
        ("decimal_integer_literal", Java::DecimalIntegerLiteral),
        ("assert_statement", Java::AssertStatement),
        ("enum_body_declarations", Java::EnumBodyDeclarations),
        ("f", Java::F),
        ("variable_access", Java::VariableAccess),
        (">>=", Java::GTGTEQ),
        ("strictfp", Java::Strictfp),
        ("/=", Java::SLASHEQ),
        ("block", Java::Block),
        ("/", Java::SLASH),
        ("/\\\\\\\\\\\\n/", Java::SLASHBSLASHBSLASHBSLASHnSLASH),
        ("\\\\", Java::BSLASH),
        ("short", Java::Short),
        ("try", Java::Try),
        ("abstract", Java::Abstract),
        ("import_declaration_repeat1", Java::ImportDeclarationRepeat1),
        ("null_literal", Java::NullLiteral),
        ("ternary_expression", Java::TernaryExpression),
        ("\\\"", Java::DQUOTE),
        ("integer_literal", Java::IntegerLiteral),
        ("cast_expression_repeat1", Java::CastExpressionRepeat1),
        ("ETX", Java::ETX),
        ("else", Java::Else),
        ("identifier", Java::Identifier),
        ("if", Java::If),
        ("method_declarator", Java::MethodDeclarator),
        ("lambda_expression", Java::LambdaExpression),
        ("t", Java::T),
        ("annotation_type_body", Java::AnnotationTypeBody),
        ("single_element_annotation", Java::SingleElementAnnotation),
        ("array_initializer", Java::ArrayInitializer),
        ("string_literal", Java::StringLiteral),
        ("catch_type", Java::CatchType),
        ("element_value_pair_list", Java::ElementValuePairList),
        ("return", Java::Return),
        ("this", Java::This),
        ("try_statement", Java::TryStatement),
        ("constructor_declaration", Java::ConstructorDeclaration),
        ("final", Java::Final),
        ("requires_modifier", Java::RequiresModifier),
        ("program_repeat1", Java::ProgramRepeat1),
        ("catches", Java::Catches),
        ("dims", Java::Dims),
        ("ERROR", Java::Error),
        ("VT", Java::VT),
        ("horizontal_tab", Java::HorizontalTab),
        (">>>", Java::GTGTGT),
        ("variable_declarator_list", Java::VariableDeclaratorList),
        ("long", Java::Long),
        ("dims_repeat1", Java::DimsRepeat1),
        ("public", Java::Public),
        ("type_argument", Java::TypeArgument),
        ("_primary_no_new_array", Java::PrimaryNoNewArray),
        ("(", Java::LPAREN),
        ("switch_statement", Java::SwitchStatement),
        ("n", Java::N),
        ("cast_expression", Java::CastExpression),
        ("%=", Java::PERCENTEQ),
        ("continue", Java::Continue),
        ("constant_declaration", Java::ConstantDeclaration),
        ("%", Java::PERCENT),
        ("module", Java::Module),
        ("scoped_type_identifier", Java::ScopedTypeIdentifier),
        ("field_access", Java::FieldAccess),
        ("return_statement", Java::ReturnStatement),
        ("binary_expression", Java::BinaryExpression),
        ("formal_parameters_repeat1", Java::FormalParametersRepeat1),
        ("annotated_type", Java::AnnotatedType),
        ("class_literal_repeat1", Java::ClassLiteralRepeat1),
        ("import", Java::Import),
        ("_type_arguments_or_diamond", Java::TypeArgumentsOrDiamond),
        (
            "exception_type_list_repeat1",
            Java::ExceptionTypeListRepeat1,
        ),
        ("ESC", Java::ESC),
        ("additional_bound", Java::AdditionalBound),
        (":", Java::COLON),
        ("exception_type", Java::ExceptionType),
        ("+", Java::PLUS),
        ("element_value_pair", Java::ElementValuePair),
        ("uses", Java::Uses),
        ("{", Java::LBRACE),
        ("GS", Java::GS),
        ("do_statement", Java::DoStatement),
        ("_unann_type", Java::UnannType),
        ("while_statement", Java::WhileStatement),
        ("module_name", Java::ModuleName),
        ("lhs", Java::Lhs),
        ("for_init", Java::ForInit),
        ("extends", Java::Extends),
        ("SUB", Java::SUB),
        ("throw", Java::Throw),
        ("TAB", Java::TAB),
        ("spread_parameter", Java::SpreadParameter),
        ("_wildcard_bounds", Java::WildcardBounds),
        (
            "/[A-Fa-f0-9]+/",
            Java::SLASHLBRACKADASHFaDASHf0DASH9RBRACKPLUSSLASH,
        ),
        (">>>=", Java::GTGTGTEQ),
        ("EOT", Java::EOT),
        ("interface_body", Java::InterfaceBody),
        ("type_bound", Java::TypeBound),
        ("transient", Java::Transient),
        ("<", Java::LT),
        ("constructor_declarator", Java::ConstructorDeclarator),
        ("array_access", Java::ArrayAccess),
        ("type_parameter", Java::TypeParameter),
        ("--", Java::DASHDASH),
        (
            "interface_type_list_repeat1",
            Java::InterfaceTypeListRepeat1,
        ),
        ("import_declaration", Java::ImportDeclaration),
        ("dims_expr", Java::DimsExpr),
        ("=", Java::EQ),
        (
            "element_value_array_initializer",
            Java::ElementValueArrayInitializer,
        ),
        ("->", Java::DASHGT),
        ("_reserved_identifier", Java::ReservedIdentifier),
        ("::", Java::COLONCOLON),
        ("instanceof", Java::Instanceof),
        ("hex_integer_literal", Java::HexIntegerLiteral),
        ("==", Java::EQEQ),
        ("&=", Java::AMPEQ),
        ("for", Java::For),
        ("/[0-3]/", Java::SLASHLBRACK0DASH3RBRACKSLASH),
        ("character_literal", Java::CharacterLiteral),
        ("BS", Java::BS),
        ("END", Java::END),
        ("resource_specification", Java::ResourceSpecification),
        ("module_directive_repeat3", Java::ModuleDirectiveRepeat3),
        ("|=", Java::PIPEEQ),
        ("SO", Java::SO),
        (">>", Java::GTGT),
        ("method_reference", Java::MethodReference),
        ("^", Java::CARET),
        ("switch", Java::Switch),
        (
            "local_variable_declaration_statement",
            Java::LocalVariableDeclarationStatement,
        ),
        ("catch_formal_parameter", Java::CatchFormalParameter),
        ("-=", Java::DASHEQ),
        ("module_directive", Java::ModuleDirective),
        ("native", Java::Native),
        ("module_directive_repeat1", Java::ModuleDirectiveRepeat1),
        ("labeled_statement", Java::LabeledStatement),
        ("/[0-7]+/", Java::SLASHLBRACK0DASH7RBRACKPLUSSLASH),
        ("DC1", Java::DC1),
        ("!=", Java::BANGEQ),
        ("catches_repeat1", Java::CatchesRepeat1),
        ("volatile", Java::Volatile),
        ("enum_declaration_repeat1", Java::EnumDeclarationRepeat1),
        ("transitive", Java::Transitive),
        ("open", Java::Open),
        ("type_parameters_repeat1", Java::TypeParametersRepeat1),
        ("b", Java::B),
        ("catch_type_repeat1", Java::CatchTypeRepeat1),
        ("boolean_literal", Java::BooleanLiteral),
        ("ETB", Java::ETB),
        ("local_variable_declaration", Java::LocalVariableDeclaration),
        ("method_declaration", Java::MethodDeclaration),
        ("SOH", Java::SOH),
        ("/\\\\\\\\./", Java::SLASHBSLASHBSLASHDOTSLASH),
        ("space", Java::Space),
        (";", Java::SEMI),
        ("_statement", Java::Statement),
        ("|", Java::PIPE),
        ("comment", Java::Comment),
        ("int", Java::Int),
        ("interface_declaration", Java::InterfaceDeclaration),
        ("break", Java::Break),
        ("unary_expression", Java::UnaryExpression),
        ("switch_label", Java::SwitchLabel),
        ("++", Java::PLUSPLUS),
        ("char", Java::Char),
        ("extends_interfaces", Java::ExtendsInterfaces),
        ("_dims_exprs_repeat1", Java::DimsExprsRepeat1),
        ("constructor_body_repeat1", Java::ConstructorBodyRepeat1),
        ("interface_type_list", Java::InterfaceTypeList),
        ("CR", Java::CR),
        ("binary_integer_literal", Java::BinaryIntegerLiteral),
        (
            "enum_body_declarations_repeat1",
            Java::EnumBodyDeclarationsRepeat1,
        ),
        ("<<=", Java::LTLTEQ),
        ("resource", Java::Resource),
        ("enhanced_for_statement", Java::EnhancedForStatement),
        (
            "element_value_pair_list_repeat1",
            Java::ElementValuePairListRepeat1,
        ),
        ("_dims_exprs", Java::DimsExprs),
        ("enum", Java::Enum),
        ("_annotation", Java::Annotation),
        ("opens", Java::Opens),
        (">", Java::GT),
        ("float", Java::Float),
        ("?", Java::QMARK),
        ("assert", Java::Assert),
        ("package", Java::Package),
        (
            "class_instance_creation_expression",
            Java::ClassInstanceCreationExpression,
        ),
        (
            "try_with_resources_statement",
            Java::TryWithResourcesStatement,
        ),
        ("integral_type", Java::IntegralType),
        ("class_literal", Java::ClassLiteral),
        ("wildcard_repeat1", Java::WildcardRepeat1),
        ("DC3", Java::DC3),
        ("wildcard", Java::Wildcard),
        ("<<", Java::LTLT),
        ("package_declaration", Java::PackageDeclaration),
        (")", Java::RPAREN),
        ("type_parameters", Java::TypeParameters),
        (
            "unqualified_class_instance_creation_expression",
            Java::UnqualifiedClassInstanceCreationExpression,
        ),
        ("ACK", Java::ACK),
        ("}", Java::RBRACE),
        (
            "annotation_type_element_declaration",
            Java::AnnotationTypeElementDeclaration,
        ),
        ("provides", Java::Provides),
        ("constructor_body", Java::ConstructorBody),
        (
            "element_value_array_initializer_repeat1",
            Java::ElementValueArrayInitializerRepeat1,
        ),
        ("break_statement", Java::BreakStatement),
        ("/\\\\\\\\/", Java::SLASHBSLASHBSLASHSLASH),
        ("array_initializer_repeat1", Java::ArrayInitializerRepeat1),
        (
            "/[^\\\\\'\\\\n]/",
            Java::SLASHLBRACKCARETBSLASHSQUOTEBSLASHnRBRACKSLASH,
        ),
        ("u", Java::U),
        ("class_body", Java::ClassBody),
        ("if_then_else_statement", Java::IfThenElseStatement),
        ("enum_constant", Java::EnumConstant),
        ("marker_annotation", Java::MarkerAnnotation),
        ("exports", Java::Exports),
        ("field_declaration", Java::FieldDeclaration),
        ("_type_arguments_repeat1", Java::TypeArgumentsRepeat1),
        ("BEL", Java::BEL),
        ("array_type", Java::ArrayType),
        ("&&", Java::AMPAMP),
        ("~", Java::TILDE),
        ("^=", Java::CARETEQ),
        ("void_type", Java::VoidType),
        ("_literal", Java::Literal),
        ("variable_declarator_id", Java::VariableDeclaratorId),
        ("with", Java::With),
        ("module_declaration_repeat1", Java::ModuleDeclarationRepeat1),
        ("interface_body_repeat1", Java::InterfaceBodyRepeat1),
        ("element_value", Java::ElementValue),
        (">=", Java::GTEQ),
        ("FS", Java::FS),
        ("NAK", Java::NAK),
        ("<=", Java::LTEQ),
        ("synchronized_statement", Java::SynchronizedStatement),
        ("generic_type", Java::GenericType),
        ("hex_floating_point_literal", Java::HexFloatingPointLiteral),
        ("continue_statement", Java::ContinueStatement),
        ("!", Java::BANG),
        ("boolean_type", Java::BooleanType),
        ("module_declaration", Java::ModuleDeclaration),
        ("_declaration", Java::Declaration),
        ("type_bound_repeat1", Java::TypeBoundRepeat1),
        ("throw_statement", Java::ThrowStatement),
        ("_type", Java::Type),
        ("RS", Java::RS),
        ("inferred_parameters", Java::InferredParameters),
        ("switch_block", Java::SwitchBlock),
        ("module_directive_repeat2", Java::ModuleDirectiveRepeat2),
        ("enum_declaration", Java::EnumDeclaration),
        ("ENQ", Java::ENQ),
        ("@interface", Java::ATinterface),
        ("floating_point_literal", Java::FloatingPointLiteral),
        (
            "interface_member_declaration",
            Java::InterfaceMemberDeclaration,
        ),
        ("method_invocation", Java::MethodInvocation),
        (
            "decimal_floating_point_literal",
            Java::DecimalFloatingPointLiteral,
        ),
        ("method_body", Java::MethodBody),
        ("for_statement", Java::ForStatement),
        ("default_value", Java::DefaultValue),
        ("\'", Java::SQUOTE),
        (
            "explicit_constructor_invocation",
            Java::ExplicitConstructorInvocation,
        ),
        ("do", Java::Do),
        ("...", Java::DOTDOTDOT),
        ("floating_point_type", Java::FloatingPointType),
        ("EM", Java::EM),
        ("US", Java::US),
        ("character_literal_repeat1", Java::CharacterLiteralRepeat1),
        ("DC4", Java::DC4),
        ("_primary", Java::Primary),
        ("private", Java::Private),
        ("program", Java::Program),
        ("]", Java::RBRACK),
        ("_type_arguments", Java::TypeArguments),
        ("byte", Java::Byte),
        ("modifier", Java::Modifier),
        ("double", Java::Double),
        ("+=", Java::PLUSEQ),
        (
            "normal_interface_declaration",
            Java::NormalInterfaceDeclaration,
        ),
        ("array_creation_expression", Java::ArrayCreationExpression),
        ("argument_list", Java::ArgumentList),
        ("NUL", Java::NUL),
        ("normal_annotation", Java::NormalAnnotation),
        ("to", Java::To),
        ("_method_statement", Java::MethodStatement),
        ("true", Java::True),
        ("formal_parameter", Java::FormalParameter),
        ("method_header", Java::MethodHeader),
        ("super_interfaces", Java::SuperInterfaces),
        ("implements", Java::Implements),
        ("static_initializer", Java::StaticInitializer),
        ("basic_for_statement", Java::BasicForStatement),
        ("DC2", Java::DC2),
        ("interface", Java::Interface),
        ("&", Java::AMP),
        ("*=", Java::STAREQ),
        ("-", Java::DASH),
        ("receiver_parameter", Java::ReceiverParameter),
        ("false", Java::False),
        ("catch", Java::Catch),
        ("switch_block_repeat1", Java::SwitchBlockRepeat1),
        (
            "resource_specification_repeat1",
            Java::ResourceSpecificationRepeat1,
        ),
        ("class", Java::Class),
        ("default", Java::Default),
        ("finally", Java::Finally),
        (
            "annotation_type_declaration",
            Java::AnnotationTypeDeclaration,
        ),
        ("[", Java::LBRACK),
        (
            "basic_for_statement_repeat1",
            Java::BasicForStatementRepeat1,
        ),
        ("||", Java::PIPEPIPE),
        ("superclass", Java::Superclass),
        ("r", Java::R),
        ("catch_clause", Java::CatchClause),
        ("*", Java::STAR),
        (
            "annotation_type_body_repeat1",
            Java::AnnotationTypeBodyRepeat1,
        ),
        ("requires", Java::Requires),
        ("SI", Java::SI),
    ]),
};

impl From<&str> for Java {
    #[inline(always)]
    fn from(key: &str) -> Self {
        KEYS.get(key).unwrap().clone()
    }
}

impl From<u16> for Java {
    #[inline(always)]
    fn from(x: u16) -> Self {
        unsafe { std::mem::transmute(x) }
    }
}

// Java == u16
impl PartialEq<u16> for Java {
    #[inline(always)]
    fn eq(&self, x: &u16) -> bool {
        *self == Java::from(*x)
    }
}

// u16 == Java
impl PartialEq<Java> for u16 {
    #[inline(always)]
    fn eq(&self, x: &Java) -> bool {
        *x == *self
    }
}
